version: 2.1

orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.5.0
  docker: circleci/docker@1.7.0
  # heroku: circleci/heroku@0.0.10
  heroku: circleci/heroku@1.0.1

# Define the jobs we want to run for this project
jobs:
  build_and_nox:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      # - python/install-packages:
      #     pkg-manager: pip
      # - python/install-packages:
      #     pip-dependency-file: requirements.txt
      #     pkg-manager: pip
      # - python/install-packages:
      #     args: poetry
      #     pkg-manager: pip
      # - python/install-packages:
      #     args: nox
      #     pkg-manager: pip

      # - python/install-packages:
      #     pkg-manager: poetry
      - restore_cache: # **restores saved dependency cache if the Branch key template or requirements.txt files have not changed since the previous run**
          key: pydeps-v01__{{ checksum "requirements.txt" }}
      - run: # install and activate virtual environment with pip
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache: # ** special step to save dependency cache **
          key: pydeps-v01__{{ checksum "requirements.txt" }}
          paths:
            - '.venv'
            - '~/.cache/pip'
      - run:
          name: Noxing the codebase
          command: |
            python -m nox
  dockerize:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build and push Docker image
          command: |
            echo "$DOCKER_HUB_PASSWORD" | docker login -u $DOCKER_HUB_USER --password-stdin
            docker build -t jevan32/deg-x-api:latest .
            docker push jevan32/deg-x-api:latest

# Orchestrate our job run sequence
workflows:
  nox_and_deploy:
    jobs:
      - build_and_nox
      - dockerize:
          requires:
            - build_and_nox # Only run deploy job once the build job has completed
          filters:
            branches:
              only: master
      - heroku/deploy-via-git:
          requires:
            - dockerize # Only run deploy job once the build job has completed
          filters:
            branches:
              only: master
